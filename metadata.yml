title: US counties, their polygons and FIPS codes
source: census.gov
source_url: https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html
about: simonw/us-counties-datasette
about_url: https://github.com/simonw/us-counties-datasette
description_html: |-
  <h2>Search counties</h2>
  <form action="/counties/search_counties" method="GET">
  <p>
      <input name="_search" type="search" placeholder="Search counties"> <input type="submit" value="Search">
  </p>
  </form>
allow_sql:
  id: simon
plugins:
  datasette-auth-passwords:
    simon_password_hash:
      $env: SIMON_HASH
databases:
  counties:
    tables:
      search_counties:
        fts_table: counties_fts
        fts_pk: rowid
    queries:
      county_for_latitude_longitude:
        sql: |-
          select
            STATEFP as state_fips,
            states.abbreviation as state,
            STATEFP || COUNTYFP as county_fips,
            counties.NAME as county_name,
            COUNTYNS,
            AFFGEOID,
            GEOID,
            LSAD,
            ALAND,
            AWATER
          from
            counties join states on counties.STATEFP = states.fips
          where
            within(
              MakePoint(cast(:longitude as float), cast(:latitude as float)),
              counties.Geometry
            ) = 1 and counties.rowid in (
              select
                rowid
              from
                SpatialIndex
              where
                f_table_name = 'counties'
                and search_frame = MakePoint(cast(:longitude as float), cast(:latitude as float))
            )
          limit
            1
      county_for_latitude_longitude_with_map:
        sql: |-
          select
            STATEFP as state_fips,
            states.abbreviation as state,
            STATEFP || COUNTYFP as county_fips,
            counties.NAME as county_name,
            COUNTYNS,
            AFFGEOID,
            GEOID,
            LSAD,
            ALAND,
            AWATER,
            AsGeoJSON(geometry) as map
          from
            counties join states on counties.STATEFP = states.fips
          where
            within(
              MakePoint(cast(:longitude as float), cast(:latitude as float)),
              counties.Geometry
            ) = 1 and counties.rowid in (
              select
                rowid
              from
                SpatialIndex
              where
                f_table_name = 'counties'
                and search_frame = MakePoint(cast(:longitude as float), cast(:latitude as float))
            )
          limit
            1
